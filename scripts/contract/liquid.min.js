const _min_voter_turnout=0,_min_approval_rate=0,_max_voter_turnout=100,_max_approval_rate=100,_min_voting_time_range_to_begin=0,_min_voting_time_range_to_end=1e10,_max_voting_time_range_to_begin=6048e11,_max_voting_time_range_to_end=6048e11;function assert_valid_voting_id(t){if(t.length<5||30<t.length)throw"ERROR:1101";for(const i of t)if(!("a"<=i&&i<="z"||"0"<=i&&i<="9"||"_"===i))throw"ERROR:1102"}function assert_valid_rule(t,i){if(t<_min_voter_turnout||_max_voter_turnout<t)throw"ERROR:1103";if(i<_min_approval_rate||_max_approval_rate<i)throw"ERROR:1104"}function assert_valid_time(t,i){const e=t-block.time,a=i-t;if(e<_min_voting_time_range_to_begin||_max_voting_time_range_to_begin<e)throw"ERROR:1105";if(a<_min_voting_time_range_to_end||_max_voting_time_range_to_end<a)throw"ERROR:1106"}class Liquid{init(){storage.put("error",JSON.stringify({1001:"投票者として既に登録されているname",1002:"投票者として既に登録されているiost_id",1003:"投票者として登録されていないアカウントからのトランザクション",1004:"Adminとして登録されているアカウントからのトランザクションが要求されている",1005:"対象がAdminとして登録されていることが要求されている",1006:"投票作成時に，既に使われているvoting_idを使おうとした",1007:"投票が作成されていない",1008:"既に終了した投票",1009:"直接投票の選択肢インデックスが無効な値",1010:"投票の開始時間がまだ来ていない",1011:"投票の終了時間を超えている",1012:"Delegate先として指定したiost_idが投票者として登録されていない",1013:"投票の終了時間がまだ来ていない",1101:"voting_idが長すぎる若しくは短すぎる(5-30)",1102:"voting_idに無効な文字列が含まれている(a-z,0-9,_)",1103:"最低参加率が指定範囲を超えている(0-100)",1104:"最低賛成率が指定範囲を超えている(0-100)",1105:"投票の作成から開始時間までの指定が無効な値(0秒-7日)",1106:"投票の開始から終了までの時間の指定が無効(10秒-7日)"})),storage.mapPut("voting","#running",JSON.stringify([])),storage.mapPut("voting","#finished",JSON.stringify([])),storage.mapPut("account",tx.publisher,tx.hash),storage.mapPut("admin",tx.publisher,tx.hash),storage.put("account_list",JSON.stringify([tx.publisher]))}can_update(t){return blockchain.requireAuth(blockchain.contractOwner(),"active")}join(t,i){if(storage.mapHas("iost_id",t))throw"ERROR:1001";if(storage.mapHas("name",tx.publisher))throw"ERROR:1002";const e=JSON.parse(storage.get("account_list"));e.push(tx.publisher),storage.put("account_list",JSON.stringify(e)),storage.mapPut("account",tx.publisher,tx.hash),storage.mapPut("iost_id",t,tx.publisher),storage.mapPut("name",tx.publisher,t),blockchain.receipt(i)}quit(){if(!storage.mapHas("account",tx.publisher))throw"ERROR:1003";const t=storage.mapGet("name",tx.publisher),i=JSON.parse(storage.get("account_list"));i.splice(i.indexOf(tx.publisher),1),storage.put("account_list",JSON.stringify(i)),storage.mapDel("account",tx.publisher),storage.mapDel("name",tx.publisher),storage.mapDel("iost_id",t),storage.mapDel("admin",tx.publisher);const e=JSON.parse(storage.mapGet("voting","#running"));for(const t in e)storage.mapDel(`vote.${t}`,tx.publisher)}add_admin(t){if(!storage.mapHas("account",t))throw"ERROR:1003";if(!storage.mapHas("admin",tx.publisher))throw"ERROR:1004";if(storage.mapHas("admin",t))throw"ERROR:1005";storage.mapPut("admin",t,tx.hash)}remove_admin(t){if(!storage.mapHas("admin",tx.publisher))throw"ERROR:1004";if(!storage.mapHas("admin",t))throw"ERROR:1005";storage.mapDel("admin",t)}create(t,i,e,a,o,r,n){if(!storage.mapHas("admin",tx.publisher))throw"ERROR:1004";if(storage.mapHas("voting",t))throw"ERROR:1006";a=JSON.parse(a),o=Number(o),r=Number(r),n=JSON.parse(n),assert_valid_time(i,e),assert_valid_rule(o,r);const s=JSON.parse(storage.mapGet("voting","#running"));s.push(t),storage.mapPut("voting","#running",JSON.stringify(s)),storage.mapPut("voting",t,JSON.stringify({begin:i,end:e,selection_length:a.length,create:tx.hash})),blockchain.receipt(JSON.stringify({selection_list:a,voter_turnout:o,approval_rate:r,config:n}))}vote(t,i){if(assert_valid_voting_id(t),!storage.mapHas("account",tx.publisher))throw"ERROR:1004";const e=JSON.parse(storage.mapGet("voting",t));if(null===e)throw"ERROR:1007";if(void 0!==e.finish)throw"ERROR:1008";if(e.selection_length-1<i)throw"ERROR:1009";if(block.time<e.begin)throw"ERROR:1010";if(e.end<block.time)throw"ERROR:1011";storage.mapPut(`vote.${t}`,tx.publisher,JSON.stringify({to:i}))}delegate(t,i){if(!storage.mapHas("account",tx.publisher))throw"ERROR:1003";if(!storage.mapHas("account",i))throw"ERROR:1012";const e=JSON.parse(storage.mapGet("voting",t));if(null===e)throw"ERROR:1007";if(void 0!==e.finish)throw"ERROR:1008";if(block.time<e.begin)throw"ERROR:1010";if(e.end<block.time)throw"ERROR:1011";storage.mapPut(`vote.${t}`,tx.publisher,JSON.stringify({to:i}))}finish(t){if(!storage.mapHas("admin",tx.publisher))throw"ERROR:1004";const i=JSON.parse(storage.mapGet("voting",t));if(null===i)throw"ERROR:1007";if(void 0!==i.finish)throw"ERROR:1008";if(block.time<i.end)throw"ERROR:1013";const e={},a=JSON.parse(storage.get("account_list"));for(const i of a){const a=JSON.parse(storage.mapGet(`vote.${t}`,i));null!==a&&(e[i]=a.to,storage.mapDel(`vote.${t}`,i))}e["#length"]=a.length;const o=JSON.parse(storage.mapGet("voting","#running")),r=JSON.parse(storage.mapGet("voting","#finished"));o.splice(o.indexOf(t),1),r.push(t),storage.mapPut("voting","#running",JSON.stringify(o)),storage.mapPut("voting","#finished",JSON.stringify(r)),storage.mapPut("voting",t,JSON.stringify({create:i.create,finish:tx.hash})),blockchain.receipt(JSON.stringify(e))}}module.exports=Liquid;